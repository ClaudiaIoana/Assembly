     1                                  bits 32
     2                                  
     3                                  ;A file name and a text (defined in the data segment) are given. The text contains lowercase letters, uppercase letters, digits and special characters. Transform all the uppercase letters from the given text in lowe
     4                                  
     5                                  global start
     6                                  
     7                                  extern exit, fopen, fclose, fprintf
     8                                  
     9                                  import exit msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import fprintf msvcrt.dll
    13                                  
    14                                  segment data use32 class=data
    15                                      ;...
    16 00000000 52616E646F6D2E7478-         file_name db "Random.txt", 0
    16 00000009 7400               
    17 0000000B 20                          dif db 'a'-'A' ; for transorming a letter from upper case to lower case
    18 0000000C 7700                        access_mode db "w", 0; w - create an empty file for writing
    19 0000000E FFFFFFFF                    file_descriptor dd -1       ; variable to hold the file descriptor
    20 00000012 546865203120636F4E-         text db "The 1 coNTenT Is RAndoM. ;).", 0
    20 0000001B 54656E542049732052-
    20 00000024 416E646F4D2E203B29-
    20 0000002D 2E00               
    21                                      len equ $ - text ; the length of the text
    22                                      
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ;...
    26                                          
    27 00000000 B91D000000                      mov ecx, len
    28 00000005 E31A                            JECXZ Skip ; skip if the string is empty
    29                                          
    30 00000007 BE[12000000]                    mov esi, text
    31                                          
    32                                          MY_LOOP:
    33 0000000C 8A06                                mov al, [esi]
    34                                              ;see if the character is an uppercase one
    35 0000000E 3C41                                cmp al, 'A'
    36 00000010 720C                                jb NO ;if it lower than A
    37 00000012 3C5A                                cmp al, 'Z'
    38 00000014 7708                                ja NO ; if it is grater than Z
    39 00000016 0205[0B000000]                      add al, byte [dif] ; transform the letter
    40 0000001C 8806                                mov [esi], al
    41                                              NO:
    42 0000001E 46                                  inc esi
    43 0000001F E2EB                            loop MY_LOOP
    44                                         
    45                                          Skip:
    46                                          
    47                                          
    48                                          ;creating a file
    49                                          ;call fopen() to create the file
    50                                          ;fopen() will return a file descriptor in the eax or 0 in case of error
    51                                          ;eax = fopen(file_name, access_mode)
    52                                          
    53 00000021 68[0C000000]                    push dword access_mode
    54 00000026 68[00000000]                    push dword file_name
    55 0000002B FF15[00000000]                  call [fopen] ; open the file
    56 00000031 83C408                          add esp, 4*2
    57                                          
    58 00000034 A3[0E000000]                    mov [file_descriptor], eax  ; store the file descriptor returned by fopen
    59                                          
    60                                          ; check if fopen() has successfully created the file (EAX != 0)
    61 00000039 83F800                          cmp eax, 0
    62 0000003C 7423                            je final
    63                                          
    64                                          ; fprintf(file_descriptor, text)
    65 0000003E 68[12000000]                    push dword text
    66 00000043 FF35[0E000000]                  push dword [file_descriptor]
    67 00000049 FF15[00000000]                  call [fprintf] ; print the text into the file
    68 0000004F 83C408                          add esp, 4*2
    69                                          
    70 00000052 FF35[0E000000]                  push dword [file_descriptor]
    71 00000058 FF15[00000000]                  call [fclose] ; close the file
    72 0000005E 83C404                          add esp, 4
    73                                          
    74                                          final:
    75                                          
    76                                          ;exit(0)
    77 00000061 6A00                            push dword 0
    78 00000063 FF15[00000000]                  call [exit]
